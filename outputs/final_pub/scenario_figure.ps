%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.5 (Build 18F132) Quartz PS Context)
%%Title: (scenario_figure)
%%Creator: (Excel: cgpdftops CUPS filter)
%%CreationDate: (Thursday, March 05 2020 15:02:01 MST)
%%For: (Garrett Rapp)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(scenario_figure)def
/Creator(Excel: cgpdftops CUPS filter)def
/CreationDate(Thursday, March 05 2020 15:02:01 MST)def
/For(Garrett Rapp)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *ExternalTray NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Finisher FinAMURHY
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *InnerTray2 NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *LargeCapacityTray NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *OptionTray 2Cassette
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPostScript Adobe
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *ShiftTray NotInstalled
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPaperPolicy PromptUser

  <</DeferredMediaSelection true>> setpagedevice
  <</Policies << /PageSize 2 /MediaType 2 >> >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize Letter
<<
  /PageSize [612 792] /ImagingBBox null >> setpagedevice
false setedgetoedge
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600dpi
<< /HWResolution[600 600] >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPrintMode 1rhit

  << /PostRenderingEnhance true
  /PostRenderingEnhanceDetails << /Type 34 /OutputMode 0 >> >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Duplex None
<</Duplex false>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RPSDitherType Auto
(auto) RCsethalftonetype
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Rimagesm Off
(off) /RDeviceProcSet /ProcSet findresource /SetImageInterpolate get exec
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIRotateBy180 Off

  0 /RDeviceProcSet /ProcSet findresource /SetImageRotation get exec
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIOrientOvr Off
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RICollateKind Normal
/RICollateKindValue true def
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate True
RICollateKindValue {
<</Collate true
/CollateDetails << /Type 6 /AlignSet true >>
>>setpagedevice
} {
<</Collate true
/CollateDetails << /Type 6 /AlignSet false /AlignSetType RICollateAlignSetType >>
>>setpagedevice
} ifelse
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType Plain2
<< /MediaType (Plain2) >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *OutputBin FinAMURHYShift
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *StapleLocation None
<< /Staple 0 >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPunch None
<< /Punch 0 >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIFoldType None
<< /Fold 1
/FoldDetails << /Type 10 /FoldType 9 /Stamp false >> >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIWatermark Off
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIWMText Confidential
userdict /RPS_WMdict get begin
 /RPS_WM_str (CONFIDENTIAL) def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmFont Default
isGenuine
{userdict /RPS_WMdict get begin
/RPS_WM_font /Helvetica-Bold def end}
{userdict /RPS_WMdict get begin
/RPS_WM_font /NimbusSans-Bold def end}
ifelse
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmSize 36
userdict /RPS_WMdict get begin
 /RPS_WM_size 36 def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmAngle 45Deg
userdict /RPS_WMdict get begin
 /RPS_WM_angle 45 def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIwmTextStyle Gray
userdict /RPS_WMdict get begin
   /RPS_WM_color { 0 setgray }  bind  def
   /RPS_WM_Pattern {
    <<
        /PatternType 1
        /PaintType 1
        /TilingType 3
        /BBox [ 0 0 1 1 ]
        /XStep 1
        /YStep 1
        /PaintProc {
            begin
                RPS_WM_color
                8 8 true [ 8 0 0 -8 0 8 ]
                <88002200 88002200> imagemask
            end
        }
    >> [ 1 0 0 -1 0 1 ] makepattern
    setpattern }
   bind def
   /RPS_WM_draw {   %% RPS_WM_mask
    RPS_WM_str false charpath fill
  } bind def end
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBannerPageInputSlot Auto
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBannerPageMediaType Plain2
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBannerPagePrint False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Booklet None
<<
   /Booklet  0
>>
/RDeviceProcSet /ProcSet findresource /SetBooklet get exec
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIUserId None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIJobType Normal
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIFileName None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPassword None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIEnableUserCode False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIUserCode None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIEnableSpecifyTime False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RITimeHour 0
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RITimeMin 0
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIFolderNumber 0
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIFolderPassword None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPreventionType Off
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RITypeText UserText
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIText Copy
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIFont Default
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RISize 70
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIAngel 30
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIEffects Normal
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIRepeat Off
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RILineSpace 70
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIPosition Center
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIColor Black
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIDensity Medium
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIMaskType None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBrightness 0
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIContrast 0
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBlack 0
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBackgroundNumbering False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBNSize Normal
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBNDensity Normal
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIBNColor Black
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIStartNumber 1
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIEnableUserAuth False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIAuthLoginUserNameType DefinedUserID
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIAuthLoginUserNameText None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIAuthLoginPassword None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIAuthEnableEncryption False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *RIAuthEncryptionKey None
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 612 792
%%BeginPageSetup
%%EndPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
50.84 501.22 508.39999 236.22 rc
50.220001 738.06 m
559.23999 738.06 l
559.23999 705.82001 l
50.220001 705.82001 l
h
f
50.220001 706.44 m
91.139999 706.44 l
91.139999 696.52002 l
50.220001 696.52002 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 706.44 m
150.03999 706.44 l
150.03999 696.52002 l
90.519997 696.52002 l
h
f
1 1 1 sc
149.42 706.44 m
172.36 706.44 l
172.36 696.52002 l
149.42 696.52002 l
h
f
0.0078431368 0.43529409 0.7568627 sc
171.74001 706.44 m
231.25999 706.44 l
231.25999 696.52002 l
171.74001 696.52002 l
h
f
1 1 1 sc
230.64 706.44 m
253.58 706.44 l
253.58 696.52002 l
230.64 696.52002 l
h
f
0.13725489 0.36078429 0.71372551 sc
252.96001 706.44 m
312.48001 706.44 l
312.48001 696.52002 l
252.96001 696.52002 l
h
f
1 1 1 sc
311.85999 706.44 m
334.79999 706.44 l
334.79999 696.52002 l
311.85999 696.52002 l
h
f
0.1294118 0.35686269 0.71372551 sc
334.17999 706.44 m
396.79999 706.44 l
396.79999 696.52002 l
334.17999 696.52002 l
h
f
1 1 1 sc
396.17999 706.44 m
419.12 706.44 l
419.12 696.52002 l
396.17999 696.52002 l
h
f
0.0039215689 0.43529409 0.74901962 sc
418.5 706.44 m
478.01999 706.44 l
478.01999 696.52002 l
418.5 696.52002 l
h
f
1 1 1 sc
477.39999 706.44 m
500.34 706.44 l
500.34 696.52002 l
477.39999 696.52002 l
h
f
0.0039215689 0.43529409 0.74901962 sc
499.72 706.44 m
559.23999 706.44 l
559.23999 696.52002 l
499.72 696.52002 l
h
f
1 1 1 sc
50.220001 697.14001 m
91.139999 697.14001 l
91.139999 687.21997 l
50.220001 687.21997 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 697.14001 m
150.03999 697.14001 l
150.03999 687.21997 l
90.519997 687.21997 l
h
f
1 1 1 sc
149.42 697.14001 m
172.36 697.14001 l
172.36 687.21997 l
149.42 687.21997 l
h
f
0.0078431368 0.43529409 0.7568627 sc
171.74001 697.14001 m
231.25999 697.14001 l
231.25999 687.21997 l
171.74001 687.21997 l
h
f
1 1 1 sc
230.64 697.14001 m
253.58 697.14001 l
253.58 687.21997 l
230.64 687.21997 l
h
f
0.13725489 0.36078429 0.71372551 sc
252.96001 697.14001 m
312.48001 697.14001 l
312.48001 687.21997 l
252.96001 687.21997 l
h
f
1 1 1 sc
311.85999 697.14001 m
334.79999 697.14001 l
334.79999 687.21997 l
311.85999 687.21997 l
h
f
0.1294118 0.35686269 0.71372551 sc
334.17999 697.14001 m
396.79999 697.14001 l
396.79999 687.21997 l
334.17999 687.21997 l
h
f
1 1 1 sc
396.17999 697.14001 m
419.12 697.14001 l
419.12 687.21997 l
396.17999 687.21997 l
h
f
0.01176471 0.43137249 0.74901962 sc
418.5 697.14001 m
478.01999 697.14001 l
478.01999 687.21997 l
418.5 687.21997 l
h
f
1 1 1 sc
477.39999 697.14001 m
500.34 697.14001 l
500.34 687.21997 l
477.39999 687.21997 l
h
f
0.01176471 0.43137249 0.74901962 sc
499.72 697.14001 m
559.23999 697.14001 l
559.23999 687.21997 l
499.72 687.21997 l
h
f
1 1 1 sc
50.220001 687.84003 m
91.139999 687.84003 l
91.139999 677.91998 l
50.220001 677.91998 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 687.84003 m
150.03999 687.84003 l
150.03999 677.91998 l
90.519997 677.91998 l
h
f
1 1 1 sc
149.42 687.84003 m
172.36 687.84003 l
172.36 677.91998 l
149.42 677.91998 l
h
f
0.0078431368 0.43529409 0.7568627 sc
171.74001 687.84003 m
231.25999 687.84003 l
231.25999 677.91998 l
171.74001 677.91998 l
h
f
1 1 1 sc
230.64 687.84003 m
253.58 687.84003 l
253.58 677.91998 l
230.64 677.91998 l
h
f
0.13725489 0.36078429 0.71372551 sc
252.96001 687.84003 m
312.48001 687.84003 l
312.48001 677.91998 l
252.96001 677.91998 l
h
f
1 1 1 sc
311.85999 687.84003 m
334.79999 687.84003 l
334.79999 677.91998 l
311.85999 677.91998 l
h
f
0.52941179 0.1254902 0.43921569 sc
334.17999 687.84003 m
347.20001 687.84003 l
347.20001 677.91998 l
334.17999 677.91998 l
h
f
0.1294118 0.35686269 0.71372551 sc
346.57999 687.84003 m
384.39999 687.84003 l
384.39999 677.91998 l
346.57999 677.91998 l
h
f
0.52941179 0.1254902 0.43921569 sc
383.78 687.84003 m
396.79999 687.84003 l
396.79999 677.91998 l
383.78 677.91998 l
h
f
1 1 1 sc
396.17999 687.84003 m
419.12 687.84003 l
419.12 677.91998 l
396.17999 677.91998 l
h
f
0.027450981 0.42352939 0.74509799 sc
418.5 687.84003 m
478.01999 687.84003 l
478.01999 677.91998 l
418.5 677.91998 l
h
f
1 1 1 sc
477.39999 687.84003 m
500.34 687.84003 l
500.34 677.91998 l
477.39999 677.91998 l
h
f
0.027450981 0.42352939 0.74509799 sc
499.72 687.84003 m
559.23999 687.84003 l
559.23999 677.91998 l
499.72 677.91998 l
h
f
1 1 1 sc
50.220001 678.53998 m
91.139999 678.53998 l
91.139999 668.62 l
50.220001 668.62 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 678.53998 m
150.03999 678.53998 l
150.03999 668.62 l
90.519997 668.62 l
h
f
1 1 1 sc
149.42 678.53998 m
172.36 678.53998 l
172.36 668.62 l
149.42 668.62 l
h
f
0.0078431368 0.43529409 0.7568627 sc
171.74001 678.53998 m
231.25999 678.53998 l
231.25999 668.62 l
171.74001 668.62 l
h
f
1 1 1 sc
230.64 678.53998 m
253.58 678.53998 l
253.58 668.62 l
230.64 668.62 l
h
f
0.13725489 0.36078429 0.71372551 sc
252.96001 678.53998 m
312.48001 678.53998 l
312.48001 668.62 l
252.96001 668.62 l
h
f
1 1 1 sc
311.85999 678.53998 m
334.79999 678.53998 l
334.79999 668.62 l
311.85999 668.62 l
h
f
0.52941179 0.1254902 0.43921569 sc
334.17999 678.53998 m
359.60001 678.53998 l
359.60001 668.62 l
334.17999 668.62 l
h
f
0.1294118 0.35686269 0.71372551 sc
358.98001 678.53998 m
372 678.53998 l
372 668.62 l
358.98001 668.62 l
h
f
0.52941179 0.1254902 0.43921569 sc
371.38 678.53998 m
396.79999 678.53998 l
396.79999 668.62 l
371.38 668.62 l
h
f
1 1 1 sc
396.17999 678.53998 m
419.12 678.53998 l
419.12 668.62 l
396.17999 668.62 l
h
f
0.054901961 0.40784311 0.73725492 sc
418.5 678.53998 m
478.01999 678.53998 l
478.01999 668.62 l
418.5 668.62 l
h
f
1 1 1 sc
477.39999 678.53998 m
500.34 678.53998 l
500.34 668.62 l
477.39999 668.62 l
h
f
0.054901961 0.40784311 0.73725492 sc
499.72 678.53998 m
559.23999 678.53998 l
559.23999 668.62 l
499.72 668.62 l
h
f
1 1 1 sc
50.220001 669.23999 m
91.139999 669.23999 l
91.139999 659.32001 l
50.220001 659.32001 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 669.23999 m
150.03999 669.23999 l
150.03999 659.32001 l
90.519997 659.32001 l
h
f
1 1 1 sc
149.42 669.23999 m
172.36 669.23999 l
172.36 659.32001 l
149.42 659.32001 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 669.23999 m
231.25999 669.23999 l
231.25999 659.32001 l
171.74001 659.32001 l
h
f
1 1 1 sc
230.64 669.23999 m
253.58 669.23999 l
253.58 659.32001 l
230.64 659.32001 l
h
f
0.5333333 0.1294118 0.43921569 sc
252.96001 669.23999 m
312.48001 669.23999 l
312.48001 659.32001 l
252.96001 659.32001 l
h
f
1 1 1 sc
311.85999 669.23999 m
334.79999 669.23999 l
334.79999 659.32001 l
311.85999 659.32001 l
h
f
0.52941179 0.1254902 0.43921569 sc
334.17999 669.23999 m
396.79999 669.23999 l
396.79999 659.32001 l
334.17999 659.32001 l
h
f
1 1 1 sc
396.17999 669.23999 m
419.12 669.23999 l
419.12 659.32001 l
396.17999 659.32001 l
h
f
0.1058824 0.3764706 0.72156858 sc
418.5 669.23999 m
478.01999 669.23999 l
478.01999 659.32001 l
418.5 659.32001 l
h
f
1 1 1 sc
477.39999 669.23999 m
500.34 669.23999 l
500.34 659.32001 l
477.39999 659.32001 l
h
f
0.1058824 0.3764706 0.72156858 sc
499.72 669.23999 m
559.23999 669.23999 l
559.23999 659.32001 l
499.72 659.32001 l
h
f
1 1 1 sc
50.220001 659.94 m
91.139999 659.94 l
91.139999 650.02002 l
50.220001 650.02002 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 659.94 m
150.03999 659.94 l
150.03999 650.02002 l
90.519997 650.02002 l
h
f
1 1 1 sc
149.42 659.94 m
172.36 659.94 l
172.36 650.02002 l
149.42 650.02002 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 659.94 m
231.25999 659.94 l
231.25999 650.02002 l
171.74001 650.02002 l
h
f
1 1 1 sc
230.64 659.94 m
253.58 659.94 l
253.58 650.02002 l
230.64 650.02002 l
h
f
0.5333333 0.1294118 0.43921569 sc
252.96001 659.94 m
312.48001 659.94 l
312.48001 650.02002 l
252.96001 650.02002 l
h
f
1 1 1 sc
311.85999 659.94 m
334.79999 659.94 l
334.79999 650.02002 l
311.85999 650.02002 l
h
f
0.52941179 0.1254902 0.43921569 sc
334.17999 659.94 m
396.79999 659.94 l
396.79999 650.02002 l
334.17999 650.02002 l
h
f
1 1 1 sc
396.17999 659.94 m
419.12 659.94 l
419.12 650.02002 l
396.17999 650.02002 l
h
f
0.17254899 0.33725491 0.7019608 sc
418.5 659.94 m
478.01999 659.94 l
478.01999 650.02002 l
418.5 650.02002 l
h
f
1 1 1 sc
477.39999 659.94 m
500.34 659.94 l
500.34 650.02002 l
477.39999 650.02002 l
h
f
0.17254899 0.33725491 0.7019608 sc
499.72 659.94 m
559.23999 659.94 l
559.23999 650.02002 l
499.72 650.02002 l
h
f
1 1 1 sc
50.220001 650.64001 m
91.139999 650.64001 l
91.139999 640.71997 l
50.220001 640.71997 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 650.64001 m
150.03999 650.64001 l
150.03999 640.71997 l
90.519997 640.71997 l
h
f
1 1 1 sc
149.42 650.64001 m
172.36 650.64001 l
172.36 640.71997 l
149.42 640.71997 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 650.64001 m
231.25999 650.64001 l
231.25999 640.71997 l
171.74001 640.71997 l
h
f
1 1 1 sc
230.64 650.64001 m
253.58 650.64001 l
253.58 640.71997 l
230.64 640.71997 l
h
f
0.5333333 0.1294118 0.43921569 sc
252.96001 650.64001 m
312.48001 650.64001 l
312.48001 640.71997 l
252.96001 640.71997 l
h
f
1 1 1 sc
311.85999 650.64001 m
334.79999 650.64001 l
334.79999 640.71997 l
311.85999 640.71997 l
h
f
0.52941179 0.1254902 0.43921569 sc
334.17999 650.64001 m
396.79999 650.64001 l
396.79999 640.71997 l
334.17999 640.71997 l
h
f
1 1 1 sc
396.17999 650.64001 m
419.12 650.64001 l
419.12 640.71997 l
396.17999 640.71997 l
h
f
0.2431373 0.2980392 0.6823529 sc
418.5 650.64001 m
478.01999 650.64001 l
478.01999 640.71997 l
418.5 640.71997 l
h
f
1 1 1 sc
477.39999 650.64001 m
500.34 650.64001 l
500.34 640.71997 l
477.39999 640.71997 l
h
f
0.2431373 0.2980392 0.6823529 sc
499.72 650.64001 m
559.23999 650.64001 l
559.23999 640.71997 l
499.72 640.71997 l
h
f
1 1 1 sc
50.220001 641.34003 m
91.139999 641.34003 l
91.139999 631.41998 l
50.220001 631.41998 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 641.34003 m
150.03999 641.34003 l
150.03999 631.41998 l
90.519997 631.41998 l
h
f
1 1 1 sc
149.42 641.34003 m
172.36 641.34003 l
172.36 631.41998 l
149.42 631.41998 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 641.34003 m
231.25999 641.34003 l
231.25999 631.41998 l
171.74001 631.41998 l
h
f
1 1 1 sc
230.64 641.34003 m
253.58 641.34003 l
253.58 631.41998 l
230.64 631.41998 l
h
f
0.5333333 0.1294118 0.43921569 sc
252.96001 641.34003 m
312.48001 641.34003 l
312.48001 631.41998 l
252.96001 631.41998 l
h
f
1 1 1 sc
311.85999 641.34003 m
334.79999 641.34003 l
334.79999 631.41998 l
311.85999 631.41998 l
h
f
0.52941179 0.1254902 0.43921569 sc
334.17999 641.34003 m
396.79999 641.34003 l
396.79999 631.41998 l
334.17999 631.41998 l
h
f
1 1 1 sc
396.17999 641.34003 m
419.12 641.34003 l
419.12 631.41998 l
396.17999 631.41998 l
h
f
0.3098039 0.25882351 0.66274512 sc
418.5 641.34003 m
478.01999 641.34003 l
478.01999 631.41998 l
418.5 631.41998 l
h
f
1 1 1 sc
477.39999 641.34003 m
500.34 641.34003 l
500.34 631.41998 l
477.39999 631.41998 l
h
f
0.3098039 0.25882351 0.66274512 sc
499.72 641.34003 m
559.23999 641.34003 l
559.23999 631.41998 l
499.72 631.41998 l
h
f
1 1 1 sc
50.220001 632.03998 m
91.139999 632.03998 l
91.139999 622.12 l
50.220001 622.12 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 632.03998 m
150.03999 632.03998 l
150.03999 622.12 l
90.519997 622.12 l
h
f
1 1 1 sc
149.42 632.03998 m
172.36 632.03998 l
172.36 622.12 l
149.42 622.12 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 632.03998 m
231.25999 632.03998 l
231.25999 622.12 l
171.74001 622.12 l
h
f
1 1 1 sc
230.64 632.03998 m
253.58 632.03998 l
253.58 622.12 l
230.64 622.12 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 632.03998 m
312.48001 632.03998 l
312.48001 622.12 l
252.96001 622.12 l
h
f
1 1 1 sc
311.85999 632.03998 m
334.79999 632.03998 l
334.79999 622.12 l
311.85999 622.12 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 632.03998 m
396.79999 632.03998 l
396.79999 622.12 l
334.17999 622.12 l
h
f
1 1 1 sc
396.17999 632.03998 m
419.12 632.03998 l
419.12 622.12 l
396.17999 622.12 l
h
f
0.56470591 0.1137255 0.3764706 sc
418.5 632.03998 m
478.01999 632.03998 l
478.01999 622.12 l
418.5 622.12 l
h
f
1 1 1 sc
477.39999 632.03998 m
500.34 632.03998 l
500.34 622.12 l
477.39999 622.12 l
h
f
0.56470591 0.1137255 0.3764706 sc
499.72 632.03998 m
559.23999 632.03998 l
559.23999 622.12 l
499.72 622.12 l
h
f
1 1 1 sc
50.220001 622.73999 m
91.139999 622.73999 l
91.139999 603.52002 l
50.220001 603.52002 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 622.73999 m
150.03999 622.73999 l
150.03999 603.52002 l
90.519997 603.52002 l
h
f
1 1 1 sc
149.42 622.73999 m
172.36 622.73999 l
172.36 603.52002 l
149.42 603.52002 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 622.73999 m
231.25999 622.73999 l
231.25999 603.52002 l
171.74001 603.52002 l
h
f
1 1 1 sc
230.64 622.73999 m
253.58 622.73999 l
253.58 603.52002 l
230.64 603.52002 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 622.73999 m
312.48001 622.73999 l
312.48001 603.52002 l
252.96001 603.52002 l
h
f
1 1 1 sc
311.85999 622.73999 m
334.79999 622.73999 l
334.79999 603.52002 l
311.85999 603.52002 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 622.73999 m
396.79999 622.73999 l
396.79999 603.52002 l
334.17999 603.52002 l
h
f
1 1 1 sc
396.17999 622.73999 m
419.12 622.73999 l
419.12 603.52002 l
396.17999 603.52002 l
h
f
0.56862748 0.1098039 0.372549 sc
418.5 622.73999 m
478.01999 622.73999 l
478.01999 603.52002 l
418.5 603.52002 l
h
f
1 1 1 sc
477.39999 622.73999 m
500.34 622.73999 l
500.34 603.52002 l
477.39999 603.52002 l
h
f
0.56862748 0.1098039 0.372549 sc
499.72 622.73999 m
559.23999 622.73999 l
559.23999 603.52002 l
499.72 603.52002 l
h
f
1 1 1 sc
50.220001 604.14001 m
91.139999 604.14001 l
91.139999 594.21997 l
50.220001 594.21997 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 604.14001 m
150.03999 604.14001 l
150.03999 594.21997 l
90.519997 594.21997 l
h
f
1 1 1 sc
149.42 604.14001 m
172.36 604.14001 l
172.36 594.21997 l
149.42 594.21997 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 604.14001 m
231.25999 604.14001 l
231.25999 594.21997 l
171.74001 594.21997 l
h
f
1 1 1 sc
230.64 604.14001 m
253.58 604.14001 l
253.58 594.21997 l
230.64 594.21997 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 604.14001 m
312.48001 604.14001 l
312.48001 594.21997 l
252.96001 594.21997 l
h
f
1 1 1 sc
311.85999 604.14001 m
334.79999 604.14001 l
334.79999 594.21997 l
311.85999 594.21997 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 604.14001 m
396.79999 604.14001 l
396.79999 594.21997 l
334.17999 594.21997 l
h
f
1 1 1 sc
396.17999 604.14001 m
419.12 604.14001 l
419.12 594.21997 l
396.17999 594.21997 l
h
f
0.56862748 0.1098039 0.36862749 sc
418.5 604.14001 m
478.01999 604.14001 l
478.01999 594.21997 l
418.5 594.21997 l
h
f
1 1 1 sc
477.39999 604.14001 m
500.34 604.14001 l
500.34 594.21997 l
477.39999 594.21997 l
h
f
0.56862748 0.1098039 0.36862749 sc
499.72 604.14001 m
559.23999 604.14001 l
559.23999 594.21997 l
499.72 594.21997 l
h
f
1 1 1 sc
50.220001 594.84003 m
91.139999 594.84003 l
91.139999 584.91998 l
50.220001 584.91998 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 594.84003 m
150.03999 594.84003 l
150.03999 584.91998 l
90.519997 584.91998 l
h
f
1 1 1 sc
149.42 594.84003 m
172.36 594.84003 l
172.36 584.91998 l
149.42 584.91998 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 594.84003 m
231.25999 594.84003 l
231.25999 584.91998 l
171.74001 584.91998 l
h
f
1 1 1 sc
230.64 594.84003 m
253.58 594.84003 l
253.58 584.91998 l
230.64 584.91998 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 594.84003 m
312.48001 594.84003 l
312.48001 584.91998 l
252.96001 584.91998 l
h
f
1 1 1 sc
311.85999 594.84003 m
334.79999 594.84003 l
334.79999 584.91998 l
311.85999 584.91998 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 594.84003 m
396.79999 594.84003 l
396.79999 584.91998 l
334.17999 584.91998 l
h
f
1 1 1 sc
396.17999 594.84003 m
419.12 594.84003 l
419.12 584.91998 l
396.17999 584.91998 l
h
f
0.57254899 0.1098039 0.36470589 sc
418.5 594.84003 m
478.01999 594.84003 l
478.01999 584.91998 l
418.5 584.91998 l
h
f
1 1 1 sc
477.39999 594.84003 m
500.34 594.84003 l
500.34 584.91998 l
477.39999 584.91998 l
h
f
0.57254899 0.1098039 0.36470589 sc
499.72 594.84003 m
559.23999 594.84003 l
559.23999 584.91998 l
499.72 584.91998 l
h
f
1 1 1 sc
50.220001 585.53998 m
91.139999 585.53998 l
91.139999 575.62 l
50.220001 575.62 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 585.53998 m
150.03999 585.53998 l
150.03999 575.62 l
90.519997 575.62 l
h
f
1 1 1 sc
149.42 585.53998 m
172.36 585.53998 l
172.36 575.62 l
149.42 575.62 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 585.53998 m
231.25999 585.53998 l
231.25999 575.62 l
171.74001 575.62 l
h
f
1 1 1 sc
230.64 585.53998 m
253.58 585.53998 l
253.58 575.62 l
230.64 575.62 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 585.53998 m
312.48001 585.53998 l
312.48001 575.62 l
252.96001 575.62 l
h
f
1 1 1 sc
311.85999 585.53998 m
334.79999 585.53998 l
334.79999 575.62 l
311.85999 575.62 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 585.53998 m
396.79999 585.53998 l
396.79999 575.62 l
334.17999 575.62 l
h
f
1 1 1 sc
396.17999 585.53998 m
419.12 585.53998 l
419.12 575.62 l
396.17999 575.62 l
h
f
0.57647061 0.1058824 0.35686269 sc
418.5 585.53998 m
478.01999 585.53998 l
478.01999 575.62 l
418.5 575.62 l
h
f
1 1 1 sc
477.39999 585.53998 m
500.34 585.53998 l
500.34 575.62 l
477.39999 575.62 l
h
f
0.57647061 0.1058824 0.35686269 sc
499.72 585.53998 m
559.23999 585.53998 l
559.23999 575.62 l
499.72 575.62 l
h
f
1 1 1 sc
50.220001 576.23999 m
91.139999 576.23999 l
91.139999 566.32001 l
50.220001 566.32001 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 576.23999 m
150.03999 576.23999 l
150.03999 566.32001 l
90.519997 566.32001 l
h
f
1 1 1 sc
149.42 576.23999 m
172.36 576.23999 l
172.36 566.32001 l
149.42 566.32001 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 576.23999 m
231.25999 576.23999 l
231.25999 566.32001 l
171.74001 566.32001 l
h
f
1 1 1 sc
230.64 576.23999 m
253.58 576.23999 l
253.58 566.32001 l
230.64 566.32001 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 576.23999 m
312.48001 576.23999 l
312.48001 566.32001 l
252.96001 566.32001 l
h
f
1 1 1 sc
311.85999 576.23999 m
334.79999 576.23999 l
334.79999 566.32001 l
311.85999 566.32001 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 576.23999 m
396.79999 576.23999 l
396.79999 566.32001 l
334.17999 566.32001 l
h
f
1 1 1 sc
396.17999 576.23999 m
419.12 576.23999 l
419.12 566.32001 l
396.17999 566.32001 l
h
f
0.58039218 0.1019608 0.34901959 sc
418.5 576.23999 m
478.01999 576.23999 l
478.01999 566.32001 l
418.5 566.32001 l
h
f
1 1 1 sc
477.39999 576.23999 m
500.34 576.23999 l
500.34 566.32001 l
477.39999 566.32001 l
h
f
0.58039218 0.1019608 0.34901959 sc
499.72 576.23999 m
559.23999 576.23999 l
559.23999 566.32001 l
499.72 566.32001 l
h
f
1 1 1 sc
50.220001 566.94 m
91.139999 566.94 l
91.139999 557.02002 l
50.220001 557.02002 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 566.94 m
150.03999 566.94 l
150.03999 557.02002 l
90.519997 557.02002 l
h
f
1 1 1 sc
149.42 566.94 m
172.36 566.94 l
172.36 557.02002 l
149.42 557.02002 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 566.94 m
231.25999 566.94 l
231.25999 557.02002 l
171.74001 557.02002 l
h
f
1 1 1 sc
230.64 566.94 m
253.58 566.94 l
253.58 557.02002 l
230.64 557.02002 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 566.94 m
312.48001 566.94 l
312.48001 557.02002 l
252.96001 557.02002 l
h
f
1 1 1 sc
311.85999 566.94 m
334.79999 566.94 l
334.79999 557.02002 l
311.85999 557.02002 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 566.94 m
396.79999 566.94 l
396.79999 557.02002 l
334.17999 557.02002 l
h
f
1 1 1 sc
396.17999 566.94 m
419.12 566.94 l
419.12 557.02002 l
396.17999 557.02002 l
h
f
0.58823532 0.098039217 0.33333331 sc
418.5 566.94 m
478.01999 566.94 l
478.01999 557.02002 l
418.5 557.02002 l
h
f
1 1 1 sc
477.39999 566.94 m
500.34 566.94 l
500.34 557.02002 l
477.39999 557.02002 l
h
f
0.58823532 0.098039217 0.33333331 sc
499.72 566.94 m
559.23999 566.94 l
559.23999 557.02002 l
499.72 557.02002 l
h
f
1 1 1 sc
50.220001 557.64001 m
91.139999 557.64001 l
91.139999 547.71997 l
50.220001 547.71997 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 557.64001 m
150.03999 557.64001 l
150.03999 547.71997 l
90.519997 547.71997 l
h
f
1 1 1 sc
149.42 557.64001 m
172.36 557.64001 l
172.36 547.71997 l
149.42 547.71997 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 557.64001 m
231.25999 557.64001 l
231.25999 547.71997 l
171.74001 547.71997 l
h
f
1 1 1 sc
230.64 557.64001 m
253.58 557.64001 l
253.58 547.71997 l
230.64 547.71997 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 557.64001 m
312.48001 557.64001 l
312.48001 547.71997 l
252.96001 547.71997 l
h
f
1 1 1 sc
311.85999 557.64001 m
334.79999 557.64001 l
334.79999 547.71997 l
311.85999 547.71997 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 557.64001 m
396.79999 557.64001 l
396.79999 547.71997 l
334.17999 547.71997 l
h
f
1 1 1 sc
396.17999 557.64001 m
419.12 557.64001 l
419.12 547.71997 l
396.17999 547.71997 l
h
f
0.60000002 0.090196081 0.3098039 sc
418.5 557.64001 m
478.01999 557.64001 l
478.01999 547.71997 l
418.5 547.71997 l
h
f
1 1 1 sc
477.39999 557.64001 m
500.34 557.64001 l
500.34 547.71997 l
477.39999 547.71997 l
h
f
0.60000002 0.090196081 0.3098039 sc
499.72 557.64001 m
559.23999 557.64001 l
559.23999 547.71997 l
499.72 547.71997 l
h
f
1 1 1 sc
50.220001 548.34003 m
91.139999 548.34003 l
91.139999 538.41998 l
50.220001 538.41998 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 548.34003 m
150.03999 548.34003 l
150.03999 538.41998 l
90.519997 538.41998 l
h
f
1 1 1 sc
149.42 548.34003 m
172.36 548.34003 l
172.36 538.41998 l
149.42 538.41998 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 548.34003 m
231.25999 548.34003 l
231.25999 538.41998 l
171.74001 538.41998 l
h
f
1 1 1 sc
230.64 548.34003 m
253.58 548.34003 l
253.58 538.41998 l
230.64 538.41998 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 548.34003 m
312.48001 548.34003 l
312.48001 538.41998 l
252.96001 538.41998 l
h
f
1 1 1 sc
311.85999 548.34003 m
334.79999 548.34003 l
334.79999 538.41998 l
311.85999 538.41998 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 548.34003 m
396.79999 548.34003 l
396.79999 538.41998 l
334.17999 538.41998 l
h
f
1 1 1 sc
396.17999 548.34003 m
419.12 548.34003 l
419.12 538.41998 l
396.17999 538.41998 l
h
f
0.61960781 0.078431368 0.27058819 sc
418.5 548.34003 m
478.01999 548.34003 l
478.01999 538.41998 l
418.5 538.41998 l
h
f
1 1 1 sc
477.39999 548.34003 m
500.34 548.34003 l
500.34 538.41998 l
477.39999 538.41998 l
h
f
0.61960781 0.078431368 0.27058819 sc
499.72 548.34003 m
559.23999 548.34003 l
559.23999 538.41998 l
499.72 538.41998 l
h
f
1 1 1 sc
50.220001 539.03998 m
91.139999 539.03998 l
91.139999 529.12 l
50.220001 529.12 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 539.03998 m
150.03999 539.03998 l
150.03999 529.12 l
90.519997 529.12 l
h
f
1 1 1 sc
149.42 539.03998 m
172.36 539.03998 l
172.36 529.12 l
149.42 529.12 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 539.03998 m
231.25999 539.03998 l
231.25999 529.12 l
171.74001 529.12 l
h
f
1 1 1 sc
230.64 539.03998 m
253.58 539.03998 l
253.58 529.12 l
230.64 529.12 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 539.03998 m
312.48001 539.03998 l
312.48001 529.12 l
252.96001 529.12 l
h
f
1 1 1 sc
311.85999 539.03998 m
334.79999 539.03998 l
334.79999 529.12 l
311.85999 529.12 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 539.03998 m
396.79999 539.03998 l
396.79999 529.12 l
334.17999 529.12 l
h
f
1 1 1 sc
396.17999 539.03998 m
419.12 539.03998 l
419.12 529.12 l
396.17999 529.12 l
h
f
0.65882349 0.054901961 0.1921569 sc
418.5 539.03998 m
478.01999 539.03998 l
478.01999 529.12 l
418.5 529.12 l
h
f
1 1 1 sc
477.39999 539.03998 m
500.34 539.03998 l
500.34 529.12 l
477.39999 529.12 l
h
f
0.65882349 0.054901961 0.1921569 sc
499.72 539.03998 m
559.23999 539.03998 l
559.23999 529.12 l
499.72 529.12 l
h
f
1 1 1 sc
50.220001 529.73999 m
91.139999 529.73999 l
91.139999 519.82001 l
50.220001 519.82001 l
h
f
0.58431369 0.098039217 0.33333331 sc
90.519997 529.73999 m
150.03999 529.73999 l
150.03999 519.82001 l
90.519997 519.82001 l
h
f
1 1 1 sc
149.42 529.73999 m
172.36 529.73999 l
172.36 519.82001 l
149.42 519.82001 l
h
f
0.58431369 0.098039217 0.33333331 sc
171.74001 529.73999 m
231.25999 529.73999 l
231.25999 519.82001 l
171.74001 519.82001 l
h
f
1 1 1 sc
230.64 529.73999 m
253.58 529.73999 l
253.58 519.82001 l
230.64 519.82001 l
h
f
0.58823532 0.098039217 0.3294118 sc
252.96001 529.73999 m
312.48001 529.73999 l
312.48001 519.82001 l
252.96001 519.82001 l
h
f
1 1 1 sc
311.85999 529.73999 m
334.79999 529.73999 l
334.79999 519.82001 l
311.85999 519.82001 l
h
f
0.59215689 0.094117649 0.3294118 sc
334.17999 529.73999 m
396.79999 529.73999 l
396.79999 519.82001 l
334.17999 519.82001 l
h
f
1 1 1 sc
396.17999 529.73999 m
419.12 529.73999 l
419.12 519.82001 l
396.17999 519.82001 l
h
f
0.73725492 0.0078431368 0.031372551 sc
418.5 529.73999 m
478.01999 529.73999 l
478.01999 519.82001 l
418.5 519.82001 l
h
f
1 1 1 sc
477.39999 529.73999 m
500.34 529.73999 l
500.34 519.82001 l
477.39999 519.82001 l
h
f
0.73725492 0.0078431368 0.031372551 sc
499.72 529.73999 m
559.23999 529.73999 l
559.23999 519.82001 l
499.72 519.82001 l
h
f
1 1 1 sc
50.220001 520.44 m
559.23999 520.44 l
559.23999 501.22 l
50.220001 501.22 l
h
f
Q
25400 w
8 M
0 0 0 sc
q
50.220001 501.22 509.01999 236.84 rc
0.00004882 0 0 -0.00004882 75.019951 706.02667 cm
211668 719667 m
153217.5 719667 105834 711770 105834 702028.69 c
105834 377471.81 l
105834 367730.41 58450.5 359833.5 0 359833.5 c
58450.5 359833.5 105834 351936.59 105834 342195.19 c
105834 17638.289 l
105834 7896.9331 153217.5 0 211668 0 c
S
0.00004882 0 0 -0.00004882 75.019951 668 cm
211668 719667 m
153217.5 719667 105834 711770 105834 702028.69 c
105834 377471.81 l
105834 367730.41 58450.5 359833.5 0 359833.5 c
58450.5 359833.5 105834 351936.59 105834 342195.19 c
105834 17638.289 l
105834 7896.9331 153217.5 0 211668 0 c
S
0.00004882 0 0 -0.00004882 75.019897 629.97339 cm
211668 2209801 m
153217.5 2209801 105834 2201904 105834 2192162 c
105834 1122540 l
105834 1112798 58450.5 1104900 0 1104900 c
58450.5 1104900 105834 1097003 105834 1087261 c
105834 17639.26 l
105834 7897.3638 153217.5 0 211668 0 c
S
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%EOF
